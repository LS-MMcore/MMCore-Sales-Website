name: Deploy to Netlify

on:
  push:
    branches: ["main"]   # deploy to Production on pushes to main
  pull_request:          # create Preview deploys for PRs
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: "netlify-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: pm
        run: |
          if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "install=pnpm i --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "cache=pnpm" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "install=yarn --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "cache=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install=npm ci" >> $GITHUB_OUTPUT
            echo "cache=npm" >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.pm.outputs.cache }}

      - name: Install dependencies
        run: ${{ steps.pm.outputs.install }}

      # Optional but helpful: cache Next.js build artifacts between runs
      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-

      - name: Install Netlify CLI
        run: npm i -g netlify-cli

      # Build + Deploy
      # --build makes Netlify run your project's build (and @netlify/plugin-nextjs) so SSR/ISR, images, middleware etc. work.
      - name: Deploy (Preview for PRs)
        if: github.event_name == 'pull_request'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          netlify deploy \
            --build \
            --message "Preview deploy for PR #${{ github.event.number }} (${GITHUB_SHA})" \
            --alias "pr-${{ github.event.number }}"

      - name: Deploy (Production)
        if: github.event_name != 'pull_request'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          netlify deploy \
            --build \
            --prod \
            --message "Production deploy from ${GITHUB_REF} (${GITHUB_SHA})"
